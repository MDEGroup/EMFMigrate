/*
* generated by Xtext
*/
grammar InternalEmig;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package it.univaq.coevolution.emfmigrate.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package it.univaq.coevolution.emfmigrate.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import it.univaq.coevolution.emfmigrate.services.EmigGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private EmigGrammarAccess grammarAccess;
 	
    public InternalEmigParser(TokenStream input, EmigGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "MyModel";	
   	}
   	
   	@Override
   	protected EmigGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMyModel
entryRuleMyModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMyModelRule()); }
	 iv_ruleMyModel=ruleMyModel 
	 { $current=$iv_ruleMyModel.current; } 
	 EOF 
;

// Rule MyModel
ruleMyModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMyModelAccess().getMigrationLibMigrationLibraryParserRuleCall_0_0()); 
	    }
		lv_migrationLib_0_0=ruleMigrationLibrary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMyModelRule());
	        }
       		set(
       			$current, 
       			"migrationLib",
        		lv_migrationLib_0_0, 
        		"MigrationLibrary");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMyModelAccess().getMigrationProgrMigrationProgramParserRuleCall_1_0()); 
	    }
		lv_MigrationProgr_1_0=ruleMigrationProgram		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMyModelRule());
	        }
       		set(
       			$current, 
       			"MigrationProgr",
        		lv_MigrationProgr_1_0, 
        		"MigrationProgram");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMigrationLibrary
entryRuleMigrationLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMigrationLibraryRule()); }
	 iv_ruleMigrationLibrary=ruleMigrationLibrary 
	 { $current=$iv_ruleMigrationLibrary.current; } 
	 EOF 
;

// Rule MigrationLibrary
ruleMigrationLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Library' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMigrationLibraryAccess().getLibraryKeyword_0());
    }
(
(
		lv_title_1_0=RULE_ID
		{
			newLeafNode(lv_title_1_0, grammarAccess.getMigrationLibraryAccess().getTitleIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigrationLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMigrationLibraryAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMigrationLibraryAccess().getRulesRuleParserRuleCall_3_0()); 
	    }
		lv_rules_3_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigrationLibraryRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_3_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMigrationLibraryAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMigrationProgram
entryRuleMigrationProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMigrationProgramRule()); }
	 iv_ruleMigrationProgram=ruleMigrationProgram 
	 { $current=$iv_ruleMigrationProgram.current; } 
	 EOF 
;

// Rule MigrationProgram
ruleMigrationProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMigrationProgramAccess().getIncludeKeyword_0_0());
    }
(
(
		lv_libs_1_0=RULE_STRING
		{
			newLeafNode(lv_libs_1_0, grammarAccess.getMigrationProgramAccess().getLibsSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigrationProgramRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"libs",
        		lv_libs_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMigrationProgramAccess().getSemicolonKeyword_0_2());
    }
)*(
(
		lv_migr_3_0=	'migrate' 
    {
        newLeafNode(lv_migr_3_0, grammarAccess.getMigrationProgramAccess().getMigrMigrateKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigrationProgramRule());
	        }
       		setWithLastConsumed($current, "migr", lv_migr_3_0, "migrate");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMigrationProgramAccess().getTypeArtArtifactParserRuleCall_2_0()); 
	    }
		lv_typeArt_4_0=ruleArtifact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigrationProgramRule());
	        }
       		set(
       			$current, 
       			"typeArt",
        		lv_typeArt_4_0, 
        		"Artifact");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_5_0=RULE_STRING
		{
			newLeafNode(lv_name_5_0, grammarAccess.getMigrationProgramAccess().getNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigrationProgramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"STRING");
	    }

)
)	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMigrationProgramAccess().getColonKeyword_4());
    }
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigrationProgramRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_5_0_0()); 
	}

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMigrationProgramAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigrationProgramRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_5_1_1_0()); 
	}

)
)))	otherlv_10='with' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMigrationProgramAccess().getWithKeyword_6());
    }
(
(
		lv_delta_11_0=RULE_STRING
		{
			newLeafNode(lv_delta_11_0, grammarAccess.getMigrationProgramAccess().getDeltaSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigrationProgramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"delta",
        		lv_delta_11_0, 
        		"STRING");
	    }

)
)	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMigrationProgramAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMigrationProgramAccess().getRulesRuleParserRuleCall_9_0()); 
	    }
		lv_rules_13_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigrationProgramRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_13_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMigrationProgramAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleArtifact
entryRuleArtifact returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactRule()); }
	 iv_ruleArtifact=ruleArtifact 
	 { $current=$iv_ruleArtifact.current; } 
	 EOF 
;

// Rule Artifact
ruleArtifact returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_type_0_1=	'transformation' 
    {
        newLeafNode(lv_type_0_1, grammarAccess.getArtifactAccess().getTypeTransformationKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_1, null);
	    }

    |		lv_type_0_2=	'model' 
    {
        newLeafNode(lv_type_0_2, grammarAccess.getArtifactAccess().getTypeModelKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_2, null);
	    }

    |		lv_type_0_3=	'tcs-model' 
    {
        newLeafNode(lv_type_0_3, grammarAccess.getArtifactAccess().getTypeTcsModelKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_3, null);
	    }

)

)
)
;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getFilterOpDefParserRuleCall_3_0()); 
	    }
		lv_filter_3_0=ruleOpDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_3_0, 
        		"OpDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getRightSquareBracketKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getRewritingRulesRewritingRuleParserRuleCall_6_0()); 
	    }
		lv_rewritingRules_6_0=ruleRewritingRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"rewritingRules",
        		lv_rewritingRules_6_0, 
        		"RewritingRule");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOpDef
entryRuleOpDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpDefRule()); }
	 iv_ruleOpDef=ruleOpDef 
	 { $current=$iv_ruleOpDef.current; } 
	 EOF 
;

// Rule OpDef
ruleOpDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOpDefAccess().getEPackageOpDefParserRuleCall_0()); 
    }
    this_EPackageOpDef_0=ruleEPackageOpDef
    { 
        $current = $this_EPackageOpDef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOpDefAccess().getEClassOpDefParserRuleCall_1()); 
    }
    this_EClassOpDef_1=ruleEClassOpDef
    { 
        $current = $this_EClassOpDef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOpDefAccess().getEAttributeOpDefParserRuleCall_2()); 
    }
    this_EAttributeOpDef_2=ruleEAttributeOpDef
    { 
        $current = $this_EAttributeOpDef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOpDefAccess().getEReferenceOpDefParserRuleCall_3()); 
    }
    this_EReferenceOpDef_3=ruleEReferenceOpDef
    { 
        $current = $this_EReferenceOpDef_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEPackageOpDef
entryRuleEPackageOpDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEPackageOpDefRule()); }
	 iv_ruleEPackageOpDef=ruleEPackageOpDef 
	 { $current=$iv_ruleEPackageOpDef.current; } 
	 EOF 
;

// Rule EPackageOpDef
ruleEPackageOpDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEPackageOpDefAccess().getPackageKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOpDefAccess().getVarPackageParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOpDefRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Package");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEPackageOpDefAccess().getEqualsSignKeyword_0_2());
    }
)(((
(
		lv_op_3_0=	'changePackage' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getEPackageOpDefAccess().getOpChangePackageKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEPackageOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "changePackage");
	    }

)
)
    |(
(
		lv_op_4_0=	'addPackage' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getEPackageOpDefAccess().getOpAddPackageKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEPackageOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "addPackage");
	    }

)
)
    |(
(
		lv_op_5_0=	'deletePackage' 
    {
        newLeafNode(lv_op_5_0, grammarAccess.getEPackageOpDefAccess().getOpDeletePackageKeyword_1_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEPackageOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_0, "deletePackage");
	    }

)
))	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEPackageOpDefAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOpDefAccess().getRefPackageParserRuleCall_1_2_0()); 
	    }
		lv_ref_7_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOpDefRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_7_0, 
        		"Package");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEPackageOpDefAccess().getColonKeyword_1_3());
    }
	otherlv_9='package' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEPackageOpDefAccess().getPackageKeyword_1_4());
    }
	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEPackageOpDefAccess().getRightParenthesisKeyword_1_5());
    }
	otherlv_11='where' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEPackageOpDefAccess().getWhereKeyword_1_6());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getEPackageOpDefAccess().getLeftCurlyBracketKeyword_1_7());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOpDefAccess().getSettersSetterDefParserRuleCall_1_8_0_0()); 
	    }
		lv_setters_13_0=rulesetterDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOpDefRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_13_0, 
        		"setterDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOpDefAccess().getClassesEClassOpDefParserRuleCall_1_8_1_0()); 
	    }
		lv_classes_14_0=ruleEClassOpDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOpDefRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_14_0, 
        		"EClassOpDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getEPackageOpDefAccess().getRightCurlyBracketKeyword_1_9());
    }
))
;





// Entry rule entryRuleEClassOpDef
entryRuleEClassOpDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEClassOpDefRule()); }
	 iv_ruleEClassOpDef=ruleEClassOpDef 
	 { $current=$iv_ruleEClassOpDef.current; } 
	 EOF 
;

// Rule EClassOpDef
ruleEClassOpDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEClassOpDefAccess().getClassKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOpDefAccess().getVarClassParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=ruleClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOpDefRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Class");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEClassOpDefAccess().getEqualsSignKeyword_0_2());
    }
)(((
(
		lv_op_3_0=	'changeClass' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getEClassOpDefAccess().getOpChangeClassKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEClassOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "changeClass");
	    }

)
)
    |(
(
		lv_op_4_0=	'addClass' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getEClassOpDefAccess().getOpAddClassKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEClassOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "addClass");
	    }

)
)
    |(
(
		lv_op_5_0=	'deleteClass' 
    {
        newLeafNode(lv_op_5_0, grammarAccess.getEClassOpDefAccess().getOpDeleteClassKeyword_1_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEClassOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_0, "deleteClass");
	    }

)
))	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEClassOpDefAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOpDefAccess().getRefClassParserRuleCall_1_2_0()); 
	    }
		lv_ref_7_0=ruleClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOpDefRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_7_0, 
        		"Class");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEClassOpDefAccess().getColonKeyword_1_3());
    }
	otherlv_9='class' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEClassOpDefAccess().getClassKeyword_1_4());
    }
	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEClassOpDefAccess().getRightParenthesisKeyword_1_5());
    }
	otherlv_11='where' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEClassOpDefAccess().getWhereKeyword_1_6());
    }
(	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getEClassOpDefAccess().getLeftCurlyBracketKeyword_1_7_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOpDefAccess().getSettersSetterDefParserRuleCall_1_7_1_0_0()); 
	    }
		lv_setters_13_0=rulesetterDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOpDefRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_13_0, 
        		"setterDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOpDefAccess().getAttributesEAttributeOpDefParserRuleCall_1_7_1_1_0()); 
	    }
		lv_attributes_14_0=ruleEAttributeOpDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOpDefRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_14_0, 
        		"EAttributeOpDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOpDefAccess().getReferencesEReferenceOpDefParserRuleCall_1_7_1_2_0()); 
	    }
		lv_references_15_0=ruleEReferenceOpDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOpDefRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_15_0, 
        		"EReferenceOpDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getEClassOpDefAccess().getRightCurlyBracketKeyword_1_7_2());
    }
)))
;





// Entry rule entryRuleEAttributeOpDef
entryRuleEAttributeOpDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEAttributeOpDefRule()); }
	 iv_ruleEAttributeOpDef=ruleEAttributeOpDef 
	 { $current=$iv_ruleEAttributeOpDef.current; } 
	 EOF 
;

// Rule EAttributeOpDef
ruleEAttributeOpDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEAttributeOpDefAccess().getAttributeKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOpDefAccess().getVarAttributeParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOpDefRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEAttributeOpDefAccess().getEqualsSignKeyword_0_2());
    }
)((((
(
		lv_op_3_0=	'changeEAttribute' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getEAttributeOpDefAccess().getOpChangeEAttributeKeyword_1_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEAttributeOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "changeEAttribute");
	    }

)
)
    |(
(
		lv_op_4_0=	'addEAttribute' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getEAttributeOpDefAccess().getOpAddEAttributeKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEAttributeOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "addEAttribute");
	    }

)
)
    |(
(
		lv_op_5_0=	'deleteEAttribute' 
    {
        newLeafNode(lv_op_5_0, grammarAccess.getEAttributeOpDefAccess().getOpDeleteEAttributeKeyword_1_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEAttributeOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_0, "deleteEAttribute");
	    }

)
))	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEAttributeOpDefAccess().getLeftParenthesisKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOpDefAccess().getRefAttributeParserRuleCall_1_0_2_0()); 
	    }
		lv_ref_7_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOpDefRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_7_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEAttributeOpDefAccess().getColonKeyword_1_0_3());
    }
	otherlv_9='attribute' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEAttributeOpDefAccess().getAttributeKeyword_1_0_4());
    }
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEAttributeOpDefAccess().getRightParenthesisKeyword_1_1());
    }
	otherlv_11='where' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEAttributeOpDefAccess().getWhereKeyword_1_2());
    }
((	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getEAttributeOpDefAccess().getLeftCurlyBracketKeyword_1_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOpDefAccess().getSettersSetterDefParserRuleCall_1_3_0_1_0()); 
	    }
		lv_setters_13_0=rulesetterDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOpDefRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_13_0, 
        		"setterDef");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getEAttributeOpDefAccess().getRightCurlyBracketKeyword_1_3_0_2());
    }
)
    |	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getEAttributeOpDefAccess().getSemicolonKeyword_1_3_1());
    }
)))
;





// Entry rule entryRuleEReferenceOpDef
entryRuleEReferenceOpDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEReferenceOpDefRule()); }
	 iv_ruleEReferenceOpDef=ruleEReferenceOpDef 
	 { $current=$iv_ruleEReferenceOpDef.current; } 
	 EOF 
;

// Rule EReferenceOpDef
ruleEReferenceOpDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='reference' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEReferenceOpDefAccess().getReferenceKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOpDefAccess().getVarReferenceParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=ruleReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOpDefRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Reference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEReferenceOpDefAccess().getEqualsSignKeyword_0_2());
    }
)((((
(
		lv_op_3_0=	'changeEReference' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getEReferenceOpDefAccess().getOpChangeEReferenceKeyword_1_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEReferenceOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "changeEReference");
	    }

)
)
    |(
(
		lv_op_4_0=	'addEReference' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getEReferenceOpDefAccess().getOpAddEReferenceKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEReferenceOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "addEReference");
	    }

)
)
    |(
(
		lv_op_5_0=	'deleteEReference' 
    {
        newLeafNode(lv_op_5_0, grammarAccess.getEReferenceOpDefAccess().getOpDeleteEReferenceKeyword_1_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEReferenceOpDefRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_0, "deleteEReference");
	    }

)
))	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEReferenceOpDefAccess().getLeftParenthesisKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOpDefAccess().getRefReferenceParserRuleCall_1_0_2_0()); 
	    }
		lv_ref_7_0=ruleReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOpDefRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_7_0, 
        		"Reference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEReferenceOpDefAccess().getColonKeyword_1_0_3());
    }
	otherlv_9='reference' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEReferenceOpDefAccess().getReferenceKeyword_1_0_4());
    }
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEReferenceOpDefAccess().getRightParenthesisKeyword_1_1());
    }
	otherlv_11='where' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEReferenceOpDefAccess().getWhereKeyword_1_2());
    }
(	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getEReferenceOpDefAccess().getLeftCurlyBracketKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOpDefAccess().getSettersSetterDefParserRuleCall_1_3_1_0()); 
	    }
		lv_setters_13_0=rulesetterDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOpDefRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_13_0, 
        		"setterDef");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getEReferenceOpDefAccess().getRightCurlyBracketKeyword_1_3_2());
    }
)))
;





// Entry rule entryRulesetterDef
entryRulesetterDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetterDefRule()); }
	 iv_rulesetterDef=rulesetterDef 
	 { $current=$iv_rulesetterDef.current; } 
	 EOF 
;

// Rule setterDef
rulesetterDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSetterDefAccess().getSetKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetterDefRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSetterDefAccess().getMetafeatureEStructuralFeatureCrossReference_1_0()); 
	}

)
)(
(
		lv_operator_2_0=	'=' 
    {
        newLeafNode(lv_operator_2_0, grammarAccess.getSetterDefAccess().getOperatorEqualsSignKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetterDefRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_0, "=");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSetterDefAccess().getParParameterParserRuleCall_3_0()); 
	    }
		lv_par_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetterDefRule());
	        }
       		add(
       			$current, 
       			"par",
        		lv_par_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetterDefAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetterDefAccess().getParParameterParserRuleCall_4_1_0()); 
	    }
		lv_par_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetterDefRule());
	        }
       		add(
       			$current, 
       			"par",
        		lv_par_5_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetterDefAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleRewritingRule
entryRuleRewritingRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRewritingRuleRule()); }
	 iv_ruleRewritingRule=ruleRewritingRule 
	 { $current=$iv_ruleRewritingRule.current; } 
	 EOF 
;

// Rule RewritingRule
ruleRewritingRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getRewritingRuleAccess().getMigratorsSXMigratorSXParserRuleCall_0_0_0()); 
	    }
		lv_migratorsSX_0_0=ruleMigratorSX		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewritingRuleRule());
	        }
       		add(
       			$current, 
       			"migratorsSX",
        		lv_migratorsSX_0_0, 
        		"MigratorSX");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRewritingRuleAccess().getHyphenMinusGreaterThanSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewritingRuleAccess().getMigratorDXMigratorDXParserRuleCall_0_2_0()); 
	    }
		lv_migratorDX_2_0=ruleMigratorDX		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewritingRuleRule());
	        }
       		add(
       			$current, 
       			"migratorDX",
        		lv_migratorDX_2_0, 
        		"MigratorDX");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_3='&' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRewritingRuleAccess().getAmpersandKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewritingRuleAccess().getMigratorSXMigratorSXParserRuleCall_1_1_0()); 
	    }
		lv_migratorSX_4_0=ruleMigratorSX		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewritingRuleRule());
	        }
       		add(
       			$current, 
       			"migratorSX",
        		lv_migratorSX_4_0, 
        		"MigratorSX");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRewritingRuleAccess().getHyphenMinusGreaterThanSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewritingRuleAccess().getMigratorDXMigratorDXParserRuleCall_1_3_0()); 
	    }
		lv_migratorDX_6_0=ruleMigratorDX		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewritingRuleRule());
	        }
       		add(
       			$current, 
       			"migratorDX",
        		lv_migratorDX_6_0, 
        		"MigratorDX");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;







// Entry rule entryRuleMigratorSX
entryRuleMigratorSX returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMigratorSXRule()); }
	 iv_ruleMigratorSX=ruleMigratorSX 
	 { $current=$iv_ruleMigratorSX.current; } 
	 EOF 
;

// Rule MigratorSX
ruleMigratorSX returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMigratorSXAccess().getMigratorSXAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMigratorSXAccess().getNameVariableDeclarationParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigratorSXRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMigratorSXAccess().getColonKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigratorSXRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMigratorSXAccess().getElementSXEClassCrossReference_3_0()); 
	}

)
)	otherlv_4='where' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMigratorSXAccess().getWhereKeyword_4());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMigratorSXAccess().getLeftSquareBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMigratorSXAccess().getFilterSXFilterMigratorParserRuleCall_6_0()); 
	    }
		lv_filterSX_6_0=ruleFilterMigrator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigratorSXRule());
	        }
       		add(
       			$current, 
       			"filterSX",
        		lv_filterSX_6_0, 
        		"FilterMigrator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='&' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMigratorSXAccess().getAmpersandKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMigratorSXAccess().getFilterSXFilterMigratorParserRuleCall_7_1_0()); 
	    }
		lv_filterSX_8_0=ruleFilterMigrator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigratorSXRule());
	        }
       		add(
       			$current, 
       			"filterSX",
        		lv_filterSX_8_0, 
        		"FilterMigrator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMigratorSXAccess().getRightSquareBracketKeyword_8());
    }
)
;





// Entry rule entryRuleMigratorDX
entryRuleMigratorDX returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMigratorDXRule()); }
	 iv_ruleMigratorDX=ruleMigratorDX 
	 { $current=$iv_ruleMigratorDX.current; } 
	 EOF 
;

// Rule MigratorDX
ruleMigratorDX returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMigratorDXAccess().getMigratorDXAction_0_0(),
            $current);
    }
)((
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMigratorDXAccess().getNameIDTerminalRuleCall_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigratorDXRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMigratorDXAccess().getColonKeyword_0_1_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMigratorDXRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMigratorDXAccess().getElementDXEClassCrossReference_0_1_2_0()); 
	}

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMigratorDXAccess().getLeftSquareBracketKeyword_0_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMigratorDXAccess().getFilterDXFilterMigratorParserRuleCall_0_1_4_0()); 
	    }
		lv_filterDX_5_0=ruleFilterMigrator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigratorDXRule());
	        }
       		add(
       			$current, 
       			"filterDX",
        		lv_filterDX_5_0, 
        		"FilterMigrator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='&' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMigratorDXAccess().getAmpersandKeyword_0_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMigratorDXAccess().getFilterDXFilterMigratorParserRuleCall_0_1_5_1_0()); 
	    }
		lv_filterDX_7_0=ruleFilterMigrator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigratorDXRule());
	        }
       		add(
       			$current, 
       			"filterDX",
        		lv_filterDX_7_0, 
        		"FilterMigrator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMigratorDXAccess().getRightSquareBracketKeyword_0_1_6());
    }
))
    |	otherlv_9='null' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMigratorDXAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleFilterMigrator
entryRuleFilterMigrator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilterMigratorRule()); }
	 iv_ruleFilterMigrator=ruleFilterMigrator 
	 { $current=$iv_ruleFilterMigrator.current; } 
	 EOF 
;

// Rule FilterMigrator
ruleFilterMigrator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterMigratorAccess().getSpecificationOclExpressionParserRuleCall_0()); 
	    }
		lv_specification_0_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterMigratorRule());
	        }
       		set(
       			$current, 
       			"specification",
        		lv_specification_0_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?
;









// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getPercentSignKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPackageAccess().getPackageAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getClassAccess().getClassAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeAccess().getAttributeAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getReferenceAccess().getReferenceAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;







// Entry rule entryRuleOclFeature
entryRuleOclFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclFeatureRule()); }
	 iv_ruleOclFeature=ruleOclFeature 
	 { $current=$iv_ruleOclFeature.current; } 
	 EOF 
;

// Rule OclFeature
ruleOclFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclFeatureAccess().getOclAttributeParserRuleCall_0()); 
    }
    this_OclAttribute_0=ruleOclAttribute
    { 
        $current = $this_OclAttribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclFeatureAccess().getOperationParserRuleCall_1()); 
    }
    this_Operation_1=ruleOperation
    { 
        $current = $this_Operation_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOclType
entryRuleOclType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclTypeRule()); }
	 iv_ruleOclType=ruleOclType 
	 { $current=$iv_ruleOclType.current; } 
	 EOF 
;

// Rule OclType
ruleOclType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getOclType_ImplParserRuleCall_0()); 
    }
    this_OclType_Impl_0=ruleOclType_Impl
    { 
        $current = $this_OclType_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getCollectionType_ImplParserRuleCall_1()); 
    }
    this_CollectionType_Impl_1=ruleCollectionType_Impl
    { 
        $current = $this_CollectionType_Impl_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getStringTypeParserRuleCall_2()); 
    }
    this_StringType_2=ruleStringType
    { 
        $current = $this_StringType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getBooleanTypeParserRuleCall_3()); 
    }
    this_BooleanType_3=ruleBooleanType
    { 
        $current = $this_BooleanType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getIntegerTypeParserRuleCall_4()); 
    }
    this_IntegerType_4=ruleIntegerType
    { 
        $current = $this_IntegerType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getRealTypeParserRuleCall_5()); 
    }
    this_RealType_5=ruleRealType
    { 
        $current = $this_RealType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getBagTypeParserRuleCall_6()); 
    }
    this_BagType_6=ruleBagType
    { 
        $current = $this_BagType_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getOrderedSetTypeParserRuleCall_7()); 
    }
    this_OrderedSetType_7=ruleOrderedSetType
    { 
        $current = $this_OrderedSetType_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getSequenceTypeParserRuleCall_8()); 
    }
    this_SequenceType_8=ruleSequenceType
    { 
        $current = $this_SequenceType_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getSetTypeParserRuleCall_9()); 
    }
    this_SetType_9=ruleSetType
    { 
        $current = $this_SetType_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getOclAnyTypeParserRuleCall_10()); 
    }
    this_OclAnyType_10=ruleOclAnyType
    { 
        $current = $this_OclAnyType_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getTupleTypeParserRuleCall_11()); 
    }
    this_TupleType_11=ruleTupleType
    { 
        $current = $this_TupleType_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getOclModelElementParserRuleCall_12()); 
    }
    this_OclModelElement_12=ruleOclModelElement
    { 
        $current = $this_OclModelElement_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclTypeAccess().getMapTypeParserRuleCall_13()); 
    }
    this_MapType_13=ruleMapType
    { 
        $current = $this_MapType_13.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOclExpression
entryRuleOclExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclExpressionRule()); }
	 iv_ruleOclExpression=ruleOclExpression 
	 { $current=$iv_ruleOclExpression.current; } 
	 EOF 
;

// Rule OclExpression
ruleOclExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getVariableExpParserRuleCall_0()); 
    }
    this_VariableExp_0=ruleVariableExp
    { 
        $current = $this_VariableExp_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getSuperExpParserRuleCall_1()); 
    }
    this_SuperExp_1=ruleSuperExp
    { 
        $current = $this_SuperExp_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getStringExpParserRuleCall_2()); 
    }
    this_StringExp_2=ruleStringExp
    { 
        $current = $this_StringExp_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getBooleanExpParserRuleCall_3()); 
    }
    this_BooleanExp_3=ruleBooleanExp
    { 
        $current = $this_BooleanExp_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getRealExpParserRuleCall_4()); 
    }
    this_RealExp_4=ruleRealExp
    { 
        $current = $this_RealExp_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getIntegerExpParserRuleCall_5()); 
    }
    this_IntegerExp_5=ruleIntegerExp
    { 
        $current = $this_IntegerExp_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getBagExpParserRuleCall_6()); 
    }
    this_BagExp_6=ruleBagExp
    { 
        $current = $this_BagExp_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getOrderedSetExpParserRuleCall_7()); 
    }
    this_OrderedSetExp_7=ruleOrderedSetExp
    { 
        $current = $this_OrderedSetExp_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getSequenceExpParserRuleCall_8()); 
    }
    this_SequenceExp_8=ruleSequenceExp
    { 
        $current = $this_SequenceExp_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getSetExpParserRuleCall_9()); 
    }
    this_SetExp_9=ruleSetExp
    { 
        $current = $this_SetExp_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getTupleExpParserRuleCall_10()); 
    }
    this_TupleExp_10=ruleTupleExp
    { 
        $current = $this_TupleExp_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getMapExpParserRuleCall_11()); 
    }
    this_MapExp_11=ruleMapExp
    { 
        $current = $this_MapExp_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getEnumLiteralExpParserRuleCall_12()); 
    }
    this_EnumLiteralExp_12=ruleEnumLiteralExp
    { 
        $current = $this_EnumLiteralExp_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getOclUndefinedExpParserRuleCall_13()); 
    }
    this_OclUndefinedExp_13=ruleOclUndefinedExp
    { 
        $current = $this_OclUndefinedExp_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getOperatorCallExpParserRuleCall_14()); 
    }
    this_OperatorCallExp_14=ruleOperatorCallExp
    { 
        $current = $this_OperatorCallExp_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getCollectionOperationCallExpParserRuleCall_15()); 
    }
    this_CollectionOperationCallExp_15=ruleCollectionOperationCallExp
    { 
        $current = $this_CollectionOperationCallExp_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getIterateExpParserRuleCall_16()); 
    }
    this_IterateExp_16=ruleIterateExp
    { 
        $current = $this_IterateExp_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getIteratorExpParserRuleCall_17()); 
    }
    this_IteratorExp_17=ruleIteratorExp
    { 
        $current = $this_IteratorExp_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getLetExpParserRuleCall_18()); 
    }
    this_LetExp_18=ruleLetExp
    { 
        $current = $this_LetExp_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getIfExpParserRuleCall_19()); 
    }
    this_IfExp_19=ruleIfExp
    { 
        $current = $this_IfExp_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getCollectionType_ImplParserRuleCall_20()); 
    }
    this_CollectionType_Impl_20=ruleCollectionType_Impl
    { 
        $current = $this_CollectionType_Impl_20.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getOclType_ImplParserRuleCall_21()); 
    }
    this_OclType_Impl_21=ruleOclType_Impl
    { 
        $current = $this_OclType_Impl_21.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getStringTypeParserRuleCall_22()); 
    }
    this_StringType_22=ruleStringType
    { 
        $current = $this_StringType_22.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getBooleanTypeParserRuleCall_23()); 
    }
    this_BooleanType_23=ruleBooleanType
    { 
        $current = $this_BooleanType_23.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getIntegerTypeParserRuleCall_24()); 
    }
    this_IntegerType_24=ruleIntegerType
    { 
        $current = $this_IntegerType_24.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getRealTypeParserRuleCall_25()); 
    }
    this_RealType_25=ruleRealType
    { 
        $current = $this_RealType_25.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getBagTypeParserRuleCall_26()); 
    }
    this_BagType_26=ruleBagType
    { 
        $current = $this_BagType_26.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getOrderedSetTypeParserRuleCall_27()); 
    }
    this_OrderedSetType_27=ruleOrderedSetType
    { 
        $current = $this_OrderedSetType_27.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getSequenceTypeParserRuleCall_28()); 
    }
    this_SequenceType_28=ruleSequenceType
    { 
        $current = $this_SequenceType_28.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getSetTypeParserRuleCall_29()); 
    }
    this_SetType_29=ruleSetType
    { 
        $current = $this_SetType_29.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getOclAnyTypeParserRuleCall_30()); 
    }
    this_OclAnyType_30=ruleOclAnyType
    { 
        $current = $this_OclAnyType_30.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getTupleTypeParserRuleCall_31()); 
    }
    this_TupleType_31=ruleTupleType
    { 
        $current = $this_TupleType_31.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getOclModelElementParserRuleCall_32()); 
    }
    this_OclModelElement_32=ruleOclModelElement
    { 
        $current = $this_OclModelElement_32.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getMapTypeParserRuleCall_33()); 
    }
    this_MapType_33=ruleMapType
    { 
        $current = $this_MapType_33.current; 
        afterParserOrEnumRuleCall();
    }

    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOclExpressionAccess().getNavigationOrAttributeCallExpParserRuleCall_34_0()); 
    }
    this_NavigationOrAttributeCallExp_34=ruleNavigationOrAttributeCallExp
    { 
        $current = $this_NavigationOrAttributeCallExp_34.current; 
        afterParserOrEnumRuleCall();
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOclExpressionAccess().getNavigationOrAttributeCallExpSrcAction_34_1(),
            $current);
    }
)))
;





// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	 iv_ruleVariableDeclaration=ruleVariableDeclaration 
	 { $current=$iv_ruleVariableDeclaration.current; } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclaration_ImplParserRuleCall_0()); 
    }
    this_VariableDeclaration_Impl_0=ruleVariableDeclaration_Impl
    { 
        $current = $this_VariableDeclaration_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTuplePartParserRuleCall_1()); 
    }
    this_TuplePart_1=ruleTuplePart
    { 
        $current = $this_TuplePart_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getIteratorParserRuleCall_2()); 
    }
    this_Iterator_2=ruleIterator
    { 
        $current = $this_Iterator_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getOclParameterParserRuleCall_3()); 
    }
    this_OclParameter_3=ruleOclParameter
    { 
        $current = $this_OclParameter_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleString0
entryRuleString0 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getString0Rule()); } 
	 iv_ruleString0=ruleString0 
	 { $current=$iv_ruleString0.current.getText(); }  
	 EOF 
;

// Rule String0
ruleString0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='String' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getString0Access().getStringKeyword()); 
    }

    ;





// Entry rule entryRuleOclContextDefinition
entryRuleOclContextDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclContextDefinitionRule()); }
	 iv_ruleOclContextDefinition=ruleOclContextDefinition 
	 { $current=$iv_ruleOclContextDefinition.current; } 
	 EOF 
;

// Rule OclContextDefinition
ruleOclContextDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='context' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOclContextDefinitionAccess().getContextKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOclContextDefinitionAccess().getContext_OclTypeParserRuleCall_1_0()); 
	    }
		lv_context__1_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclContextDefinitionRule());
	        }
       		set(
       			$current, 
       			"context_",
        		lv_context__1_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOclAttribute
entryRuleOclAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclAttributeRule()); }
	 iv_ruleOclAttribute=ruleOclAttribute 
	 { $current=$iv_ruleOclAttribute.current; } 
	 EOF 
;

// Rule OclAttribute
ruleOclAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOclAttributeAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOclAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOclAttributeAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOclAttributeAccess().getTypeOclTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOclAttributeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOclAttributeAccess().getInitExpressionOclExpressionParserRuleCall_4_0()); 
	    }
		lv_initExpression_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclAttributeRule());
	        }
       		set(
       			$current, 
       			"initExpression",
        		lv_initExpression_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOperationAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getParametersOclParameterParserRuleCall_2_1_0()); 
	    }
		lv_parameters_3_0=ruleOclParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"OclParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getParametersOclParameterParserRuleCall_2_2_1_0()); 
	    }
		lv_parameters_5_0=ruleOclParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"OclParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_2_3());
    }
)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOperationAccess().getRightParenthesisKeyword_3());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOperationAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getReturnTypeOclTypeParserRuleCall_5_0()); 
	    }
		lv_returnType_9_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_9_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getBodyOclExpressionParserRuleCall_6_0()); 
	    }
		lv_body_10_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_10_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOclType_Impl
entryRuleOclType_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclType_ImplRule()); }
	 iv_ruleOclType_Impl=ruleOclType_Impl 
	 { $current=$iv_ruleOclType_Impl.current; } 
	 EOF 
;

// Rule OclType_Impl
ruleOclType_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='OclType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOclType_ImplAccess().getOclTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOclType_ImplAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOclType_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOclType_ImplAccess().getTypeKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOclType_ImplAccess().getTypeOclTypeParserRuleCall_2_1_0()); 
	    }
		lv_type_3_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclType_ImplRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleVariableExp
entryRuleVariableExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableExpRule()); }
	 iv_ruleVariableExp=ruleVariableExp 
	 { $current=$iv_ruleVariableExp.current; } 
	 EOF 
;

// Rule VariableExp
ruleVariableExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableExpAccess().getVariableExpAction_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableExpRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getVariableExpAccess().getReferredVariableVariableDeclarationCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleSuperExp
entryRuleSuperExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSuperExpRule()); }
	 iv_ruleSuperExp=ruleSuperExp 
	 { $current=$iv_ruleSuperExp.current; } 
	 EOF 
;

// Rule SuperExp
ruleSuperExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSuperExpAccess().getSuperExpAction_0(),
            $current);
    }
)	otherlv_1='super' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSuperExpAccess().getSuperKeyword_1());
    }
)
;





// Entry rule entryRuleStringExp
entryRuleStringExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringExpRule()); }
	 iv_ruleStringExp=ruleStringExp 
	 { $current=$iv_ruleStringExp.current; } 
	 EOF 
;

// Rule StringExp
ruleStringExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringExpAccess().getStringSymbolString0ParserRuleCall_0()); 
	    }
		lv_stringSymbol_0_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringExpRule());
	        }
       		set(
       			$current, 
       			"stringSymbol",
        		lv_stringSymbol_0_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBooleanExp
entryRuleBooleanExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanExpRule()); }
	 iv_ruleBooleanExp=ruleBooleanExp 
	 { $current=$iv_ruleBooleanExp.current; } 
	 EOF 
;

// Rule BooleanExp
ruleBooleanExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExpAccess().getBooleanSymbolBooleanParserRuleCall_0()); 
	    }
		lv_booleanSymbol_0_0=ruleBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExpRule());
	        }
       		set(
       			$current, 
       			"booleanSymbol",
        		lv_booleanSymbol_0_0, 
        		"Boolean");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleRealExp
entryRuleRealExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealExpRule()); }
	 iv_ruleRealExp=ruleRealExp 
	 { $current=$iv_ruleRealExp.current; } 
	 EOF 
;

// Rule RealExp
ruleRealExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealExpAccess().getRealSymbolDoubleParserRuleCall_0()); 
	    }
		lv_realSymbol_0_0=ruleDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealExpRule());
	        }
       		set(
       			$current, 
       			"realSymbol",
        		lv_realSymbol_0_0, 
        		"Double");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleIntegerExp
entryRuleIntegerExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerExpRule()); }
	 iv_ruleIntegerExp=ruleIntegerExp 
	 { $current=$iv_ruleIntegerExp.current; } 
	 EOF 
;

// Rule IntegerExp
ruleIntegerExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerExpAccess().getIntegerSymbolIntegerParserRuleCall_0()); 
	    }
		lv_integerSymbol_0_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerExpRule());
	        }
       		set(
       			$current, 
       			"integerSymbol",
        		lv_integerSymbol_0_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBagExp
entryRuleBagExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBagExpRule()); }
	 iv_ruleBagExp=ruleBagExp 
	 { $current=$iv_ruleBagExp.current; } 
	 EOF 
;

// Rule BagExp
ruleBagExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBagExpAccess().getBagExpAction_0(),
            $current);
    }
)	otherlv_1='Bag' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBagExpAccess().getBagKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBagExpAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBagExpAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_1_0()); 
	    }
		lv_elements_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBagExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBagExpAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_2_1_0()); 
	    }
		lv_elements_6_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBagExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBagExpAccess().getRightCurlyBracketKeyword_3_3());
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBagExpAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleOrderedSetExp
entryRuleOrderedSetExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderedSetExpRule()); }
	 iv_ruleOrderedSetExp=ruleOrderedSetExp 
	 { $current=$iv_ruleOrderedSetExp.current; } 
	 EOF 
;

// Rule OrderedSetExp
ruleOrderedSetExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOrderedSetExpAccess().getOrderedSetExpAction_0(),
            $current);
    }
)	otherlv_1='OrderedSet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrderedSetExpAccess().getOrderedSetKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrderedSetExpAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrderedSetExpAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_0()); 
	    }
		lv_elements_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedSetExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrderedSetExpAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_2_1_0()); 
	    }
		lv_elements_6_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedSetExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOrderedSetExpAccess().getRightCurlyBracketKeyword_3_3());
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOrderedSetExpAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSequenceExp
entryRuleSequenceExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceExpRule()); }
	 iv_ruleSequenceExp=ruleSequenceExp 
	 { $current=$iv_ruleSequenceExp.current; } 
	 EOF 
;

// Rule SequenceExp
ruleSequenceExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSequenceExpAccess().getSequenceExpAction_0(),
            $current);
    }
)	otherlv_1='Sequence' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceExpAccess().getSequenceKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSequenceExpAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceExpAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_1_0()); 
	    }
		lv_elements_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSequenceExpAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_2_1_0()); 
	    }
		lv_elements_6_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSequenceExpAccess().getRightCurlyBracketKeyword_3_3());
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSequenceExpAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSetExp
entryRuleSetExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetExpRule()); }
	 iv_ruleSetExp=ruleSetExp 
	 { $current=$iv_ruleSetExp.current; } 
	 EOF 
;

// Rule SetExp
ruleSetExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSetExpAccess().getSetExpAction_0(),
            $current);
    }
)	otherlv_1='Set' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetExpAccess().getSetKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSetExpAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetExpAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_0()); 
	    }
		lv_elements_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSetExpAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_2_1_0()); 
	    }
		lv_elements_6_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSetExpAccess().getRightCurlyBracketKeyword_3_3());
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSetExpAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTupleExp
entryRuleTupleExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleExpRule()); }
	 iv_ruleTupleExp=ruleTupleExp 
	 { $current=$iv_ruleTupleExp.current; } 
	 EOF 
;

// Rule TupleExp
ruleTupleExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTupleExpAccess().getTupleExpAction_0(),
            $current);
    }
)	otherlv_1='Tuple' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTupleExpAccess().getTupleKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTupleExpAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTupleExpAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_1_0()); 
	    }
		lv_tuplePart_4_0=ruleTuplePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleExpRule());
	        }
       		add(
       			$current, 
       			"tuplePart",
        		lv_tuplePart_4_0, 
        		"TuplePart");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTupleExpAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_2_1_0()); 
	    }
		lv_tuplePart_6_0=ruleTuplePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleExpRule());
	        }
       		add(
       			$current, 
       			"tuplePart",
        		lv_tuplePart_6_0, 
        		"TuplePart");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTupleExpAccess().getRightCurlyBracketKeyword_3_3());
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTupleExpAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMapExp
entryRuleMapExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapExpRule()); }
	 iv_ruleMapExp=ruleMapExp 
	 { $current=$iv_ruleMapExp.current; } 
	 EOF 
;

// Rule MapExp
ruleMapExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMapExpAccess().getMapExpAction_0(),
            $current);
    }
)	otherlv_1='Map' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMapExpAccess().getMapKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMapExpAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMapExpAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_1_0()); 
	    }
		lv_elements_4_0=ruleMapElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"MapElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMapExpAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_2_1_0()); 
	    }
		lv_elements_6_0=ruleMapElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapExpRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"MapElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMapExpAccess().getRightCurlyBracketKeyword_3_3());
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMapExpAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEnumLiteralExp
entryRuleEnumLiteralExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumLiteralExpRule()); }
	 iv_ruleEnumLiteralExp=ruleEnumLiteralExp 
	 { $current=$iv_ruleEnumLiteralExp.current; } 
	 EOF 
;

// Rule EnumLiteralExp
ruleEnumLiteralExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumLiteralExpAccess().getNumberSignKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumLiteralExpAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumLiteralExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleOclUndefinedExp
entryRuleOclUndefinedExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclUndefinedExpRule()); }
	 iv_ruleOclUndefinedExp=ruleOclUndefinedExp 
	 { $current=$iv_ruleOclUndefinedExp.current; } 
	 EOF 
;

// Rule OclUndefinedExp
ruleOclUndefinedExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOclUndefinedExpAccess().getOclUndefinedExpAction_0(),
            $current);
    }
)	otherlv_1='OclUndefined' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOclUndefinedExpAccess().getOclUndefinedKeyword_1());
    }
)
;





// Entry rule entryRuleNavigationOrAttributeCallExp
entryRuleNavigationOrAttributeCallExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNavigationOrAttributeCallExpRule()); }
	 iv_ruleNavigationOrAttributeCallExp=ruleNavigationOrAttributeCallExp 
	 { $current=$iv_ruleNavigationOrAttributeCallExp.current; } 
	 EOF 
;

// Rule NavigationOrAttributeCallExp
ruleNavigationOrAttributeCallExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNavigationOrAttributeCallExpAccess().getNavigationOrAttributeCallExpAction_0(),
            $current);
    }
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNavigationOrAttributeCallExpAccess().getFullStopKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getNavigationOrAttributeCallExpAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNavigationOrAttributeCallExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;







// Entry rule entryRuleOperatorCallExp
entryRuleOperatorCallExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorCallExpRule()); }
	 iv_ruleOperatorCallExp=ruleOperatorCallExp 
	 { $current=$iv_ruleOperatorCallExp.current; } 
	 EOF 
;

// Rule OperatorCallExp
ruleOperatorCallExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorCallExpAccess().getOperationNameString0ParserRuleCall_0_0()); 
	    }
		lv_operationName_0_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorCallExpRule());
	        }
       		set(
       			$current, 
       			"operationName",
        		lv_operationName_0_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperatorCallExpAccess().getLeftParenthesisKeyword_1());
    }
(	otherlv_2='arguments' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperatorCallExpAccess().getArgumentsKeyword_2_0());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperatorCallExpAccess().getLeftCurlyBracketKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorCallExpAccess().getArgumentsOclExpressionParserRuleCall_2_2_0()); 
	    }
		lv_arguments_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorCallExpRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOperatorCallExpAccess().getCommaKeyword_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorCallExpAccess().getArgumentsOclExpressionParserRuleCall_2_3_1_0()); 
	    }
		lv_arguments_6_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorCallExpRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_6_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOperatorCallExpAccess().getRightCurlyBracketKeyword_2_4());
    }
)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOperatorCallExpAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleCollectionOperationCallExp
entryRuleCollectionOperationCallExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectionOperationCallExpRule()); }
	 iv_ruleCollectionOperationCallExp=ruleCollectionOperationCallExp 
	 { $current=$iv_ruleCollectionOperationCallExp.current; } 
	 EOF 
;

// Rule CollectionOperationCallExp
ruleCollectionOperationCallExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operationName_0_0=RULE_ID
		{
			newLeafNode(lv_operationName_0_0, grammarAccess.getCollectionOperationCallExpAccess().getOperationNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCollectionOperationCallExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operationName",
        		lv_operationName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCollectionOperationCallExpAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionOperationCallExpAccess().getArgumentsOclExpressionParserRuleCall_2_0()); 
	    }
		lv_arguments_2_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionOperationCallExpRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCollectionOperationCallExpAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionOperationCallExpAccess().getArgumentsOclExpressionParserRuleCall_3_1_0()); 
	    }
		lv_arguments_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionOperationCallExpRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCollectionOperationCallExpAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleIterateExp
entryRuleIterateExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIterateExpRule()); }
	 iv_ruleIterateExp=ruleIterateExp 
	 { $current=$iv_ruleIterateExp.current; } 
	 EOF 
;

// Rule IterateExp
ruleIterateExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='iterate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIterateExpAccess().getIterateKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIterateExpAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_2_0_0()); 
	    }
		lv_iterators_2_0=ruleIterator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterateExpRule());
	        }
       		add(
       			$current, 
       			"iterators",
        		lv_iterators_2_0, 
        		"Iterator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIterateExpAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_2_1_1_0()); 
	    }
		lv_iterators_4_0=ruleIterator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterateExpRule());
	        }
       		add(
       			$current, 
       			"iterators",
        		lv_iterators_4_0, 
        		"Iterator");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIterateExpAccess().getSemicolonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIterateExpAccess().getResultVariableDeclarationParserRuleCall_4_0()); 
	    }
		lv_result_6_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterateExpRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_6_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='|' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIterateExpAccess().getVerticalLineKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIterateExpAccess().getBodyOclExpressionParserRuleCall_6_0()); 
	    }
		lv_body_8_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterateExpRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_8_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIterateExpAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleIteratorExp
entryRuleIteratorExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIteratorExpRule()); }
	 iv_ruleIteratorExp=ruleIteratorExp 
	 { $current=$iv_ruleIteratorExp.current; } 
	 EOF 
;

// Rule IteratorExp
ruleIteratorExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getIteratorExpAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIteratorExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIteratorExpAccess().getLeftParenthesisKeyword_1());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_2_0_0_0()); 
	    }
		lv_iterators_2_0=ruleIterator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIteratorExpRule());
	        }
       		add(
       			$current, 
       			"iterators",
        		lv_iterators_2_0, 
        		"Iterator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIteratorExpAccess().getCommaKeyword_2_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_2_0_1_1_0()); 
	    }
		lv_iterators_4_0=ruleIterator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIteratorExpRule());
	        }
       		add(
       			$current, 
       			"iterators",
        		lv_iterators_4_0, 
        		"Iterator");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIteratorExpAccess().getBodyOclExpressionParserRuleCall_2_1_0()); 
	    }
		lv_body_5_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIteratorExpRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIteratorExpAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleLetExp
entryRuleLetExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLetExpRule()); }
	 iv_ruleLetExp=ruleLetExp 
	 { $current=$iv_ruleLetExp.current; } 
	 EOF 
;

// Rule LetExp
ruleLetExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='let' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLetExpAccess().getLetKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLetExpAccess().getVariableVariableDeclarationParserRuleCall_1_0()); 
	    }
		lv_variable_1_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLetExpRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_1_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='in' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLetExpAccess().getInKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLetExpAccess().getIn_OclExpressionParserRuleCall_3_0()); 
	    }
		lv_in__3_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLetExpRule());
	        }
       		set(
       			$current, 
       			"in_",
        		lv_in__3_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIfExp
entryRuleIfExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfExpRule()); }
	 iv_ruleIfExp=ruleIfExp 
	 { $current=$iv_ruleIfExp.current; } 
	 EOF 
;

// Rule IfExp
ruleIfExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='If' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfExpAccess().getIfKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getConditionOclExpressionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='then' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIfExpAccess().getThenKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getThenExpressionOclExpressionParserRuleCall_3_0()); 
	    }
		lv_thenExpression_3_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		set(
       			$current, 
       			"thenExpression",
        		lv_thenExpression_3_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='else' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIfExpAccess().getElseKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getElseExpressionOclExpressionParserRuleCall_5_0()); 
	    }
		lv_elseExpression_5_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		set(
       			$current, 
       			"elseExpression",
        		lv_elseExpression_5_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='endif' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIfExpAccess().getEndifKeyword_6());
    }
)
;





// Entry rule entryRuleCollectionType_Impl
entryRuleCollectionType_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectionType_ImplRule()); }
	 iv_ruleCollectionType_Impl=ruleCollectionType_Impl 
	 { $current=$iv_ruleCollectionType_Impl.current; } 
	 EOF 
;

// Rule CollectionType_Impl
ruleCollectionType_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Collection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCollectionType_ImplAccess().getCollectionKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCollectionType_ImplAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionType_ImplAccess().getElementTypeOclTypeParserRuleCall_2_0()); 
	    }
		lv_elementType_2_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionType_ImplRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_2_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCollectionType_ImplAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleStringType
entryRuleStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringTypeRule()); }
	 iv_ruleStringType=ruleStringType 
	 { $current=$iv_ruleStringType.current; } 
	 EOF 
;

// Rule StringType
ruleStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
	otherlv_0='String' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringTypeAccess().getStringKeyword());
    }

;





// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	 iv_ruleBooleanType=ruleBooleanType 
	 { $current=$iv_ruleBooleanType.current; } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
	otherlv_0='Boolean' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBooleanTypeAccess().getBooleanKeyword());
    }

;





// Entry rule entryRuleIntegerType
entryRuleIntegerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerTypeRule()); }
	 iv_ruleIntegerType=ruleIntegerType 
	 { $current=$iv_ruleIntegerType.current; } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
	otherlv_0='Integer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerTypeAccess().getIntegerKeyword());
    }

;





// Entry rule entryRuleRealType
entryRuleRealType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealTypeRule()); }
	 iv_ruleRealType=ruleRealType 
	 { $current=$iv_ruleRealType.current; } 
	 EOF 
;

// Rule RealType
ruleRealType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
	otherlv_0='Real' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealTypeAccess().getRealKeyword());
    }

;





// Entry rule entryRuleBagType
entryRuleBagType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBagTypeRule()); }
	 iv_ruleBagType=ruleBagType 
	 { $current=$iv_ruleBagType.current; } 
	 EOF 
;

// Rule BagType
ruleBagType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BagType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBagTypeAccess().getBagTypeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBagTypeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBagTypeAccess().getNameKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBagTypeAccess().getNameString0ParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBagTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBagTypeAccess().getTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBagTypeAccess().getTypeOclTypeParserRuleCall_4_1_0()); 
	    }
		lv_type_5_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBagTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='elementType' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBagTypeAccess().getElementTypeKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBagTypeAccess().getElementTypeOclTypeParserRuleCall_6_0()); 
	    }
		lv_elementType_7_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBagTypeRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_7_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBagTypeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOrderedSetType
entryRuleOrderedSetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderedSetTypeRule()); }
	 iv_ruleOrderedSetType=ruleOrderedSetType 
	 { $current=$iv_ruleOrderedSetType.current; } 
	 EOF 
;

// Rule OrderedSetType
ruleOrderedSetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='OrderedSetType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderedSetTypeAccess().getOrderedSetTypeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrderedSetTypeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrderedSetTypeAccess().getNameKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderedSetTypeAccess().getNameString0ParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedSetTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOrderedSetTypeAccess().getTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderedSetTypeAccess().getTypeOclTypeParserRuleCall_4_1_0()); 
	    }
		lv_type_5_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedSetTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='elementType' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOrderedSetTypeAccess().getElementTypeKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderedSetTypeAccess().getElementTypeOclTypeParserRuleCall_6_0()); 
	    }
		lv_elementType_7_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedSetTypeRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_7_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOrderedSetTypeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSequenceType
entryRuleSequenceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceTypeRule()); }
	 iv_ruleSequenceType=ruleSequenceType 
	 { $current=$iv_ruleSequenceType.current; } 
	 EOF 
;

// Rule SequenceType
ruleSequenceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SequenceType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceTypeAccess().getSequenceTypeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceTypeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSequenceTypeAccess().getNameKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getNameString0ParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSequenceTypeAccess().getTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getTypeOclTypeParserRuleCall_4_1_0()); 
	    }
		lv_type_5_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='elementType' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSequenceTypeAccess().getElementTypeKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getElementTypeOclTypeParserRuleCall_6_0()); 
	    }
		lv_elementType_7_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_7_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSequenceTypeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSetType
entryRuleSetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetTypeRule()); }
	 iv_ruleSetType=ruleSetType 
	 { $current=$iv_ruleSetType.current; } 
	 EOF 
;

// Rule SetType
ruleSetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SetType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSetTypeAccess().getSetTypeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetTypeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSetTypeAccess().getNameKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetTypeAccess().getNameString0ParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetTypeAccess().getTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetTypeAccess().getTypeOclTypeParserRuleCall_4_1_0()); 
	    }
		lv_type_5_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='elementType' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetTypeAccess().getElementTypeKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetTypeAccess().getElementTypeOclTypeParserRuleCall_6_0()); 
	    }
		lv_elementType_7_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetTypeRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_7_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSetTypeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOclAnyType
entryRuleOclAnyType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclAnyTypeRule()); }
	 iv_ruleOclAnyType=ruleOclAnyType 
	 { $current=$iv_ruleOclAnyType.current; } 
	 EOF 
;

// Rule OclAnyType
ruleOclAnyType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
	otherlv_0='OclAny' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOclAnyTypeAccess().getOclAnyKeyword());
    }

;





// Entry rule entryRuleTupleType
entryRuleTupleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleTypeRule()); }
	 iv_ruleTupleType=ruleTupleType 
	 { $current=$iv_ruleTupleType.current; } 
	 EOF 
;

// Rule TupleType
ruleTupleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TupleType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTupleTypeAccess().getTupleTypeKeyword_0());
    }
	otherlv_1='( ' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTupleTypeAccess().getLeftParenthesisSpaceKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTupleTypeAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_2_1_0()); 
	    }
		lv_attributes_3_0=ruleTupleTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleTypeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"TupleTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTupleTypeAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_2_2_1_0()); 
	    }
		lv_attributes_5_0=ruleTupleTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleTypeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_5_0, 
        		"TupleTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTupleTypeAccess().getRightCurlyBracketKeyword_2_3());
    }
)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleOclModelElement
entryRuleOclModelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclModelElementRule()); }
	 iv_ruleOclModelElement=ruleOclModelElement 
	 { $current=$iv_ruleOclModelElement.current; } 
	 EOF 
;

// Rule OclModelElement
ruleOclModelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOclModelElementRule());
	        }
        }
	otherlv_0=RULE_STRING
	{
		newLeafNode(otherlv_0, grammarAccess.getOclModelElementAccess().getModelOclModelCrossReference_0_0()); 
	}

)
)	otherlv_1='!' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOclModelElementAccess().getExclamationMarkKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOclModelElementAccess().getNameString0ParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclModelElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMapType
entryRuleMapType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapTypeRule()); }
	 iv_ruleMapType=ruleMapType 
	 { $current=$iv_ruleMapType.current; } 
	 EOF 
;

// Rule MapType
ruleMapType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Map' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapTypeAccess().getKeyTypeOclTypeParserRuleCall_2_0()); 
	    }
		lv_keyType_2_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapTypeRule());
	        }
       		set(
       			$current, 
       			"keyType",
        		lv_keyType_2_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapTypeAccess().getValueTypeOclTypeParserRuleCall_4_0()); 
	    }
		lv_valueType_4_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapTypeRule());
	        }
       		set(
       			$current, 
       			"valueType",
        		lv_valueType_4_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMapTypeAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleVariableDeclaration_Impl
entryRuleVariableDeclaration_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDeclaration_ImplRule()); }
	 iv_ruleVariableDeclaration_Impl=ruleVariableDeclaration_Impl 
	 { $current=$iv_ruleVariableDeclaration_Impl.current; } 
	 EOF 
;

// Rule VariableDeclaration_Impl
ruleVariableDeclaration_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariableDeclaration_ImplAccess().getNumberSignKeyword_0());
    }
(
(
		lv_varName_1_0=RULE_ID
		{
			newLeafNode(lv_varName_1_0, grammarAccess.getVariableDeclaration_ImplAccess().getVarNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableDeclaration_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"varName",
        		lv_varName_1_0, 
        		"ID");
	    }

)
)((	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableDeclaration_ImplAccess().getColonKeyword_2_0_0());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariableDeclaration_ImplAccess().getLeftParenthesisKeyword_2_0_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableDeclaration_ImplRule());
	        }
        }
	otherlv_4=RULE_STRING
	{
		newLeafNode(otherlv_4, grammarAccess.getVariableDeclaration_ImplAccess().getVariableExpVariableExpCrossReference_2_0_2_0()); 
	}

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariableDeclaration_ImplAccess().getCommaKeyword_2_0_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableDeclaration_ImplRule());
	        }
        }
	otherlv_6=RULE_STRING
	{
		newLeafNode(otherlv_6, grammarAccess.getVariableDeclaration_ImplAccess().getVariableExpVariableExpCrossReference_2_0_3_1_0()); 
	}

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVariableDeclaration_ImplAccess().getRightParenthesisKeyword_2_0_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclaration_ImplAccess().getTypeOclTypeParserRuleCall_2_1_0()); 
	    }
		lv_type_8_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclaration_ImplRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVariableDeclaration_ImplAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclaration_ImplAccess().getInitExpressionOclExpressionParserRuleCall_2_3_0()); 
	    }
		lv_initExpression_10_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclaration_ImplRule());
	        }
       		set(
       			$current, 
       			"initExpression",
        		lv_initExpression_10_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?)
;





// Entry rule entryRuleTuplePart
entryRuleTuplePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTuplePartRule()); }
	 iv_ruleTuplePart=ruleTuplePart 
	 { $current=$iv_ruleTuplePart.current; } 
	 EOF 
;

// Rule TuplePart
ruleTuplePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_varName_0_0=RULE_ID
		{
			newLeafNode(lv_varName_0_0, grammarAccess.getTuplePartAccess().getVarNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTuplePartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"varName",
        		lv_varName_0_0, 
        		"ID");
	    }

)
)(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTuplePartAccess().getColonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTuplePartAccess().getTypeOclTypeParserRuleCall_1_1_0()); 
	    }
		lv_type_2_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTuplePartRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTuplePartAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTuplePartAccess().getInitExpressionOclExpressionParserRuleCall_2_1_0()); 
	    }
		lv_initExpression_4_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTuplePartRule());
	        }
       		set(
       			$current, 
       			"initExpression",
        		lv_initExpression_4_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleIterator
entryRuleIterator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIteratorRule()); }
	 iv_ruleIterator=ruleIterator 
	 { $current=$iv_ruleIterator.current; } 
	 EOF 
;

// Rule Iterator
ruleIterator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getIteratorAccess().getVarNameString0ParserRuleCall_0()); 
	    }
		lv_varName_0_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIteratorRule());
	        }
       		set(
       			$current, 
       			"varName",
        		lv_varName_0_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleOclParameter
entryRuleOclParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOclParameterRule()); }
	 iv_ruleOclParameter=ruleOclParameter 
	 { $current=$iv_ruleOclParameter.current; } 
	 EOF 
;

// Rule OclParameter
ruleOclParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='id' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOclParameterAccess().getIdKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOclParameterAccess().getIdString0ParserRuleCall_0_1_0()); 
	    }
		lv_id_1_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclParameterRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getOclParameterAccess().getVarNameString0ParserRuleCall_1_0()); 
	    }
		lv_varName_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclParameterRule());
	        }
       		set(
       			$current, 
       			"varName",
        		lv_varName_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOclParameterAccess().getColonKeyword_2());
    }
(	otherlv_4='variableExp' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOclParameterAccess().getVariableExpKeyword_3_0());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOclParameterAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOclParameterRule());
	        }
        }
	otherlv_6=RULE_STRING
	{
		newLeafNode(otherlv_6, grammarAccess.getOclParameterAccess().getVariableExpVariableExpCrossReference_3_2_0()); 
	}

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOclParameterAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOclParameterRule());
	        }
        }
	otherlv_8=RULE_STRING
	{
		newLeafNode(otherlv_8, grammarAccess.getOclParameterAccess().getVariableExpVariableExpCrossReference_3_3_1_0()); 
	}

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOclParameterAccess().getRightParenthesisKeyword_3_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOclParameterAccess().getTypeOclTypeParserRuleCall_4_0()); 
	    }
		lv_type_10_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOclParameterAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOclParameterAccess().getInitExpressionOclExpressionParserRuleCall_6_0()); 
	    }
		lv_initExpression_12_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOclParameterRule());
	        }
       		set(
       			$current, 
       			"initExpression",
        		lv_initExpression_12_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBoolean
entryRuleBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanRule()); } 
	 iv_ruleBoolean=ruleBoolean 
	 { $current=$iv_ruleBoolean.current.getText(); }  
	 EOF 
;

// Rule Boolean
ruleBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleRule()); } 
	 iv_ruleDouble=ruleDouble 
	 { $current=$iv_ruleDouble.current.getText(); }  
	 EOF 
;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='Double' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDoubleAccess().getDoubleKeyword()); 
    }

    ;





// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerRule()); } 
	 iv_ruleInteger=ruleInteger 
	 { $current=$iv_ruleInteger.current.getText(); }  
	 EOF 
;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='Integer' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerAccess().getIntegerKeyword()); 
    }

    ;





// Entry rule entryRuleMapElement
entryRuleMapElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapElementRule()); }
	 iv_ruleMapElement=ruleMapElement 
	 { $current=$iv_ruleMapElement.current; } 
	 EOF 
;

// Rule MapElement
ruleMapElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMapElementAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapElementAccess().getKeyOclExpressionParserRuleCall_1_0()); 
	    }
		lv_key_1_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapElementRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_1_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMapElementAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapElementAccess().getValueOclExpressionParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleOclExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapElementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"OclExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMapElementAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleTupleTypeAttribute
entryRuleTupleTypeAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleTypeAttributeRule()); }
	 iv_ruleTupleTypeAttribute=ruleTupleTypeAttribute 
	 { $current=$iv_ruleTupleTypeAttribute.current; } 
	 EOF 
;

// Rule TupleTypeAttribute
ruleTupleTypeAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTupleTypeAttributeAccess().getNameString0ParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleTypeAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTupleTypeAttributeAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleTypeAttributeAccess().getTypeOclTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleOclType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleTypeAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"OclType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;



















RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


